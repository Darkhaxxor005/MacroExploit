import json
import hashlib
import urllib.request
import base64
import platform
import sys
import time
import os
import requests
api_key = "9EWGL89dASNdwZ5LeQBsCHyuQkp1"


Y = '\033[33m'
G = '\033[32m'
R = '\033[31m'
B = '\033[34m'
W = '\033[37m'
logo = W + """
 ____  _  _    ____  __  __ _  ____  ____  ____ 
(  _ \/ )( \  (  __)(  )(  ( \(    \(  __)(  _ \\
 ) __/) __ (   ) _)  )( /    / ) D ( ) _)  )   /
(__)  \_)(_/  (__)  (__)\_)__)(____/(____)(__\_)
                    Coded By"""+R+""" R00tdev1l
                    """+Y+"""https://t.me/ParadoxicalSquad
"""
                                                            
options = G + """
---------------------------
| 1.Number to NID         |
---------------------------
| 2.Birth Details         |
---------------------------
| 3.NID Details           |
---------------------------
| 4.Truecaller            |
---------------------------
| 5.Custom SMS            |
---------------------------
| 6.TIN Details           |
---------------------------
| 7.Call Bomber           |
---------------------------
"""
def balance():
 urll = "https://ghost.toxinum.xyz/api/v1/getUser"
 data = {
     "apiKey": api_key
 }
 response = requests.post(urll, json=data)
 dataa  = response.json()
 if dataa["status"] == False:
    print(Y + "\nStatus    : " + R + str(dataa["status"]))
    print(R + "Message   : " + G + str(dataa["message"]))
    input(Y + "\n\nPress Enter To Continue....")
    sys.exit()
 else:
    print(Y + "\nBalance    : " + R + str(dataa["balance"]))
print(logo)
balance()
print(options)
def callbomber():
  os.system("clear")
  print(logo)
  url = "https://ghost.toxinum.xyz/api/v1/call"
  Number = input(W + "\nEnter Number: "+G+"")
  Amount = input(W + "\nEnter Ammount: "+G+"")
  data = {
     "number": Number,
     "amount": Amount,
     "apiKey": api_key
  }
  response = requests.post(url, json=data)
  data7 = response.json()
  try:
    if data7["status"] == False:
        print(Y + "\nStatus    : " + R + str(data7["status"]))
        print(R + "Message   : " + G + str(data7["message"]))
        input(Y + "\n\nPress Enter To Continue....")
        sys.exit()
  except KeyError:
    pass

  print(R + "\nSuccess : " + G + str(data7.get("success", "")))
  print(R + "Failed  : " + Y + str(data7.get("failed", "")))
  print(R + "Message : " + G + str(data7.get("message", "")))

def tin():
  os.system("clear")
  print(logo)
  url = "https://ghost.toxinum.xyz/api/v1/tin"
  Number = input(W + "\nEnter TIN number: "+G+"")
  data = {
     "tin": Number,
     "apiKey": api_key
  }
  response = requests.post(url, json=data)
  data6  = response.json()
  if data6["status"] == False:
       print(Y + "\nStatus    : " + R + str(data6["status"]))
       print(R + "Message   : " + G + str(data6["message"]))
       input(Y + "\n\nPress Enter To Continue....")
       sys.exit()
  else:
       present_address = data6.get("presentAddress", {})
       permanent_address = data6.get("permanentAddress", {})
       zoned = data6.get("zone", {})
       print(Y + "\nStatus            : " + R + str(data6["status"]))
       print(R + "\nName              : " + G + str(data6["name"]))
       print(R + "TIN               : " + G + str(data6["tin"]))
       print(R + "Type              : " + G + str(data6["tinStatus"]))
       print(R + "Father's Name     : " + G + str(data6["fathersName"]))
       print(R + "Mother's Name     : " + G + str(data6["mothersName"]))
       print(R + "Passport          : " + G + str(data6["passport"]))
       print(R + "NID               : " + G + str(data6["nid"]))
       print(R + "Smart NID         : " + G + str(data6["smartNid"]))
       print(R + "DOB               : " + G + str(data6["dob"]))
       print(R + "Mobile            : " + G + str(data6["mobile"]))
       print(R + "Email             : " + G + str(data6["email"]))
       print(R + "Nationality       : " + G + str(data6["nationality"]))
       print(R + "\n[+]Zone[+]\n")
       print(Y +"      Zone No.  : "+G+"", zoned.get("zoneNo", ""))
       print(Y +"      Zone Name : "+G+"", zoned.get("zoneName", ""))
       print(R + "\n[+]Present Address[+]\n")
       print(Y +"      Address1  : "+G+"", present_address.get("addr", ""))
       print(Y +"      Address2  : "+G+"", present_address.get("addr1", ""))
       print(Y +"      City      : "+G+"", present_address.get("city", ""))
       print(Y +"      District  : "+G+"", present_address.get("distName", ""))
       print(Y +"      Upazila   : "+G+"", present_address.get("upzaName", ""))
       print(Y +"      Thana     : "+G+"", present_address.get("thanaName", ""))
       print(Y +"      Post Code : "+G+"", present_address.get("postCode", ""))
       print(Y +"      Zip Code  : "+G+"", present_address.get("zipCode", ""))
       print(R + "\n[+]Permanent Address[+]\n")
       print(Y +"      Address1  : "+G+"", permanent_address.get("addr", ""))
       print(Y +"      Address2  : "+G+"", permanent_address.get("addr1", ""))
       print(Y +"      City      : "+G+"", permanent_address.get("city", ""))
       print(Y +"      District  : "+G+"", permanent_address.get("distName", ""))
       print(Y +"      Upazila   : "+G+"", permanent_address.get("upzaName", ""))
       print(Y +"      Thana     : "+G+"", permanent_address.get("thanaName", ""))
       print(Y +"      Post Code : "+G+"", permanent_address.get("postCode", ""))
       print(Y +"      Zip Code  : "+G+"", permanent_address.get("zipCode", ""))
def annonsms():
  os.system("clear")
  print(logo)
  url = "https://ghost.toxinum.xyz/api/v1/anonsms"
  print(W + "\nType the number in the format "+G+"01XXXXXXXXX")
  Number = input(W + "\n\nEnter Number: "+G+"")
  Text = input(W + "\nEnter Your Text: "+G+"")
  data = {
     "number": Number,
     "text": Text,
     "apiKey": api_key
  }
  response = requests.post(url, json=data)
  data5  = response.json()
  if data5["status"] == False:
       print(Y + "\nStatus    : " + R + str(data5["status"]))
       print(R + "Message   : " + G + str(data5["message"]))
       input(Y + "\n\nPress Enter To Continue....")
       sys.exit()
  else:
       print(Y + "\nStatus    : " + R + str(data5["status"]))
       print(R + "\nMessage   : " + G + str(data5["message"]))
       print(R + "Number    : " + G + str(Number))
def truecaller_info():
  os.system("clear")
  print(logo)
  url = "https://ghost.toxinum.xyz/api/v1/truecaller"
  print(W + "\nYou must type the mobile number in international format without"+R+" +"+W+" sign")
  number = input(W +"\nEnter Mobile Number(8801XXXXXXXXX): "+G+"")
  data = {
     "number": number,
     "apiKey": api_key
  }
  response = requests.post(url, json=data)
  data3  = response.json()
  if data3["status"] == False:
       print(Y + "\nStatus    : " + R + str(data3["status"]))
       print(R + "Message   : " + G + str(data3["message"]))
       input(Y + "\n\nPress Enter To Continue....")
       sys.exit()
  elif data3["status"] == "error":
       print(Y + "\nStatus    : " + R + str(data3["status"]))
       print(R + "Message   : " + G + str(data3["message"]))
  else:
       print(Y +"\nStatus        : ",G +str(data3["status"]))
       print(R +"\nPerson Name   : ",G +str(data3["name"]))
       print(R +"About         : ",G +str(data3["about"]))
       print(R +"Job title     : ",G +str(data3["jobTitle"]))
       print(R +"Company Name  : ",G +str(data3["companyName"]))
       print(R +"GSM Company   : ",G +str(data3["phoneCarrier"]))
       print(R +"Country       : ",G +str(data3["address"]))
       print(R +"Badge         : ",G +str(data3["badges"]))
def nid_info():
  os.system("clear")
  print(logo)
  url = "https://ghost.toxinum.xyz/api/v1/nid"
  nid_number = input(W +"\nEnter NID Number: "+G+"")
  DOB2 = input(W + "\nDate of Birth(YYYY-MM-DD): "+G+"")
  data = {
     "nid": nid_number,
     "dob": DOB2,
     "apiKey": api_key
  }
  response = requests.post(url, json=data)
  data2  = response.json()
  if data2["status"] == False:
       print(Y + "\nStatus    : " + R + str(data2["status"]))
       print(R + "Message   : " + G + str(data2["message"]))
       input(Y + "\n\nPress Enter To Continue....")
       sys.exit()
  else:
       download_link = data2['photo']
       present_address = data2.get("presentAddress", {})
       permanent_address = data2.get("permanentAddress", {})
       print(Y +"\nStatus           : ",G +str(data2["status"]))
       print(R +"\nPerson Name      : ",G +str(data2["nameEn"]))
       print(R +"Person Name(BN)  : ",G +str(data2["name"]))
       print(R +"Date of Birth    : ",G +str(data2["dateOfBirth"]))
       print(R +"Father's Name(BN): ",G +str(data2["father"]))
       print(R +"Father's NID     : ",G +str(data2["nidFather"]))
       print(R +"Mother's Name(BN): ",G +str(data2["mother"]))
       print(R +"Mother's NID     : ",G +str(data2["nidMother"]))
       print(R +"Religion         : ",G +str(data2["religion"]))
       print(R +"Occupation       : ",G +str(data2["occupation"]))
       print(R +"PIN              : ",G +str(data2["pin"]))
       print(R +"Blood Group      : ",G +str(data2["bloodGroup"]))
       print(R +"NID              : ",G +str(data2["nationalId"]))
       print(R +"Spouse           : ",G +str(data2["spouse"]))
       print(R +"\n[+]Present Address[+]\n")
       print(Y +"      Division         : "+G+"", present_address.get("division", ""))
       print(Y +"      District         : "+G+"", present_address.get("district", ""))
       print(Y +"      Ward             : "+G+"", present_address.get("rmo", ""))
       print(Y +"      Upozila          : "+G+"", present_address.get("upozila", ""))
       print(Y +"      City Corporation : "+G+"", present_address.get("cityCorporationOrMunicipality", ""))
       print(Y +"      Union or Ward    : "+G+"", present_address.get("unionOrWard", ""))
       print(Y +"      Post Office      : "+G+"", present_address.get("postOffice", ""))
       print(Y +"      Post Code        : "+G+"", present_address.get("postalCode", ""))
       print(Y +"      Mouza or Mohalla : "+G+"", present_address.get("additionalMouzaOrMoholla", ""))
       print(Y +"      Road             : "+G+"", present_address.get("additionalVillageOrRoad", ""))
       print(Y +"      Home Holding No. : "+G+"", present_address.get("homeOrHoldingNo", ""))
       print(Y +"      Region           : "+G+"", present_address.get("region", ""))
       print(R +"\n[+]Permanent Address[+]\n")
       print(Y +"      Division             : "+G+"", permanent_address.get("division", ""))
       print(Y +"      District             : "+G+"", permanent_address.get("district", ""))
       print(Y +"      Ward                 : "+G+"", permanent_address.get("rmo", ""))
       print(Y +"      Upozila              : "+G+"", permanent_address.get("upozila", ""))
       print(Y +"      Ward or Union        : "+G+"", permanent_address.get("wardForUnionPorishod", ""))
       print(Y +"      Ward(Union Porishod) : "+G+"", permanent_address.get("unionOrWard", ""))
       print(Y +"      Post Office          : "+G+"", permanent_address.get("postOffice", ""))
       print(Y +"      Post Code            : "+G+"", permanent_address.get("postalCode", ""))
       print(Y +"      Mouza or Mohalla     : "+G+"", permanent_address.get("additionalMouzaOrMoholla", ""))
       print(Y +"      Road                 : "+G+"", permanent_address.get("additionalVillageOrRoad", ""))
       print(Y +"      Home Holding No.     : "+G+"", permanent_address.get("homeOrHoldingNo", ""))
       print(Y +"      Mouza or Mohalla     : "+G+"", permanent_address.get("mouzaOrMoholla", ""))
       print(Y +"      Village or Road      : "+G+"", permanent_address.get("villageOrRoad", ""))
       print(Y +"      Region               : "+G+"", permanent_address.get("region", ""))
       filename = str(data2["nameEn"]) + '.jpg'
       urllib.request.urlretrieve(download_link, filename)
       print(R + "\n\nImage saved as "+G+filename)
def birth_info():
   os.system("clear")
   print(logo)
   url = "https://ghost.toxinum.xyz/api/v1/birth"
   Birth = input(W + "\nBirth registration number: "+G+"")
   DOB = input(W +"\nDate of Birth(DD/MM/YYYY): "+G+"")
   data = {
    "birth": Birth,
    "dob": DOB,
    "apiKey": api_key
   }

   response = requests.post(url, json=data)
   response_data = response.json()
   if response_data["status"] == False:
       print(Y + "\nStatus    : " + R + str(response_data["status"]))
       print(R + "Message   : " + G + str(response_data["message"]))
       input(Y + "\n\nPress Enter To Continue....")
       sys.exit()
   else:
       print(Y +"\nStatus              : ",G +str(response_data["status"]))
       print(R +"\nPerson Name         : ",G +str(response_data["personNameEn"]))
       print(R +"Person Name(BN)     : ",G +str(response_data["personNameBn"]))
       print(R +"Date of Birth       : ",G +str(response_data["personDob"]))
       print(R +"Father's Name       : ",G +str(response_data["fatherNameEn"]))
       print(R +"Father's Name(BN)   : ",G +str(response_data["fatherNameBn"]))
       print(R +"Father's Nationality: ",G +str(response_data["fatherNationalityEn"]))
       print(R +"Father's NID        : ",G +str(response_data["fatherNid"]))
       print(R +"Mother's Name       : ",G +str(response_data["motherNameEn"]))
       print(R +"Mother's Name(BN)   : ",G +str(response_data["motherNameBn"]))
       print(R +"Mother's Nationality: ",G +str(response_data["motherNationalityEn"]))
       print(R +"Mother's NID        : ",G +str(response_data["motherNid"]))
       print(R +"Person Birth Place  : ",G +str(response_data["birthPlaceEn"]))
       print(R +"Present Address     : ",G +str(response_data["prsntAddrEn"]))
       print(R +"Ward No.            : ",G +str(response_data["wardNo"]))
       print(R +"Permanent Address   : ",G +str(response_data["permAddrEn"]))
       print(R +"Geolocation ID      : ",G +str(response_data["geolocationId"]))
       print(R +"Office ID           : ",G +str(response_data["officeId"]))
       print(R +"Registered Office   : ",G +str(response_data["registrationOfficeNameEn"]))
       print(R +"Registration Office : ",G +str(response_data["officeAddressEn"]))
       print(R +"Registration ID     : ",G +str(response_data["birthRegisterId"]))
       print(R +"Issued Date         : ",G +str(response_data["personBirthCertificateIssueDate"]))
       print(R +"Death Issued Date   : ",G +str(response_data["personDeathCertificateIssueDate"]))
       print(R +"Registration No     : ",G +str(response_data["ubrn"]))
def test_get_sim_info():
    os.system("clear")
    print(logo)
    url = "https://ghost.toxinum.xyz/api/v1/sim"
    print(W + "\nThis tool only works for Airtel and Robi numbers\n\nFor example 016XXXXXXXX or 018XXXXXXXX") 
    phone_number = input(W + "\nEnter Mobile Number:" + G +" ")
    data = {
     "number": phone_number,
     "apiKey": api_key
    }

    response = requests.post(url, json=data)
    data = response.json()
    if data["status"] == False:
       print(Y + "\nStatus    : " + R + str(data["status"]))
       print(R + "Message   : " + G + str(data["message"]))
       input(Y + "\n\nPress Enter To Continue....")
       sys.exit()
    else:
      print(Y + "\nStatus       : " + G + str(data["status"]))
      print(R + "\nOwner Name   : " + G + str(data["name"]))
      print(R + "Date of Birth: " + G + str(data["dob"]))
      print(R + "Owner NID    : " + G + str(data["nid"]))
      print(R + "Owner Gender : " + G + str(data["gender"]))
      print(R + "Owner Mobile : " + G + str(data["mobile"]))
def choicee():    
     choice = int(input(R + "\nSelect Option: "+Y+""))
     if choice == 1:
           test_get_sim_info()
           input(Y + "\n\nPress Enter To Continue....")
           os.system('clear')
           print(logo)
           balance()
           print(options)
           choicee()
     elif choice == 2:
           birth_info()
           input(Y + "\n\nPress Enter To Continue....")
           os.system('clear')
           print(logo)
           balance()
           print(options)
           choicee()
     elif choice == 3:
           nid_info()
           input(Y + "\n\nPress Enter To Continue....")
           os.system('clear')
           print(logo)
           balance()
           print(options)
           choicee()
     elif choice == 4:
           truecaller_info()
           input(Y + "\n\nPress Enter To Continue....")
           os.system('clear')
           print(logo)
           balance()
           print(options)
           choicee()
     elif choice == 5:
           annonsms()
           input(Y + "\n\nPress Enter To Continue....")
           os.system('clear')
           print(logo)
           balance()
           print(options)
           choicee()
     elif choice == 6:
           tin()
           input(Y + "\n\nPress Enter To Continue....")
           os.system('clear')
           print(logo)
           balance()
           print(options)
           choicee()
     elif choice == 7:
           callbomber()
           input(Y + "\n\nPress Enter To Continue....")
           os.system('clear')
           print(logo)
           balance()
           print(options)
           choicee()           
     else:
        print(R + "\nInvalid Input")
        time.sleep(2)
        print(logo)
        balance()
        print(options)
        choicee()

choicee()